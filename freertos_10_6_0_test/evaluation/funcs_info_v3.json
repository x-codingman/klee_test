[
    {
        "name": "vTaskDelay",
        "arg_nums": 1,
        "arguments": "xTicksToDelay",
        "type": "TickType_t ",
        "control_flags": "true"
    },
    {
        "name": "xTaskDelayUntil",
        "arg_nums": 2,
        "arguments": "pxPreviousWakeTime, xTimeIncrement",
        "type": "TickType_t *, TickType_t",
        "control_flags": " restricted, true"
    },
    {
        "name": "xTaskAbortDelay",
        "arg_nums": 1,
        "arguments": "xTask",
        "type": "TaskHandle_t",
        "control_flags": "false"
    },
    {
        "name": "uxTaskPriorityGet",
        "arg_nums": 1,
        "arguments": "xTask",
        "type": "TaskHandle_t",
        "control_flags": "false"
    },
    {
        "name": "eTaskGetState",
        "arg_nums": 1,
        "arguments": "xTask",
        "type": "TaskHandle_t",
        "control_flags": "false"
    },
    {
        "name": "vTaskGetInfo",
        "arg_nums": 4,
        "arguments": "xTask, pxTaskStatus, xGetFreeStackSpace, eState",
        "type": "TaskHandle_t, TaskStatus_t *, BaseType_t, eTaskState",
        "control_flags": "false, restricted, true, true"
    },
    {
        "name": "vTaskSuspend",
        "arg_nums": 1,
        "arguments": "xTaskToResume",
        "type": "TaskHandle_t",
        "control_flags": "false"
    },
    {
        "name": "vTaskResume",
        "arg_nums": 1,
        "arguments": "xTaskToResume",
        "type": "TaskHandle_t",
        "control_flags": "false"
    },
    {
        "name": "pcTaskGetName",
        "arg_nums": 1,
        "arguments": "xTaskToQuery",
        "type": "TaskHandle_t",
        "control_flags": "false"
    },
    {
        "name": "uxTaskGetStackHighWaterMark",
        "arg_nums": 1,
        "arguments": "xTask",
        "type": "TaskHandle_t",
        "control_flags": "false"
    },
    {
        "name": "uxTaskGetStackHighWaterMark2",
        "arg_nums": 1,
        "arguments": "xTask",
        "type": "TaskHandle_t",
        "control_flags": "false"
    },
    {
        "name": "vTaskSetApplicationTaskTag",
        "arg_nums": 2,
        "arguments": "xTask, pxHookFunction",
        "type": "TaskHandle_t, TaskHookFunction_t",
        "control_flags": "false, true"
    },
    {
        "name": "xTaskGetApplicationTaskTag",
        "arg_nums": 1,
        "arguments": "xTask",
        "type": "TaskHandle_t",
        "control_flags": "false"
    },
    {
        "name": "vTaskSetThreadLocalStoragePointer",
        "arg_nums": 3,
        "arguments": "xTaskToQuery, xIndex, pvValue",
        "type": "TaskHandle_t, BaseType_t, void *",
        "control_flags": "false, true, true"
    },
    {
        "name": "pvTaskGetThreadLocalStoragePointer",
        "arg_nums": 2,
        "arguments": "xTaskToQuery, xIndex",
        "type": "TaskHandle_t, BaseType_t",
        "control_flags": "false,true"
    },
    {
        "name": "uxTaskGetSystemState",
        "arg_nums": 2,
        "arguments": "pxTaskStatusArray,uxArraySize,pulTotalRunTime",
        "type": "TaskStatus_t *,UBaseType_t,configRUN_TIME_COUNTER_TYPE *",
        "control_flags": "true,false,false"
    },
    {
        "name": "ulTaskGetRunTimeCounter",
        "arg_nums": 1,
        "arguments": "xTask",
        "type": "TaskHandle_t",
        "control_flags": "false"
    },
    {
        "name": "ulTaskGetRunTimePercent",
        "arg_nums": 1,
        "arguments": "xTask",
        "type": "TaskHandle_t",
        "control_flags": "false"
    },
    {
        "name": "xTaskGenericNotify",
        "arg_nums": 5,
        "arguments": "xTaskToNotify,uxIndexToNotify,ulValue,eAction,pulPreviousNotificationValue",
        "type": "TaskHandle_t,UBaseType_t,uint32_t,eNotifyAction,uint32_t *",
        "control_flags": "false, true, true, true, restricted"
    },
    {
        "name": "xTaskGenericNotifyWait",
        "arg_nums": 5,
        "arguments": "uxIndexToWaitOn, ulBitsToClearOnEntry, ulBitsToClearOnExit, pulNotificationValue, xTicksToWait",
        "type": "UBaseType_t, uint32_t, uint32_t,uint32_t *,TickType_t",
        "control_flags": "true, true, true, restricted, true"
    },
    {
        "name": "ulTaskGenericNotifyTake",
        "arg_nums": 3,
        "arguments": "uxIndexToWaitOn, xClearCountOnExit, xTicksToWait",
        "type": "UBaseType_t, BaseType_t, TickType_t",
        "control_flags": "true, true, true"
    },
    {
        "name": "xTaskGenericNotifyStateClear",
        "arg_nums": 2,
        "arguments": "xTask, uxIndexToClear",
        "type": "TaskHandle_t, UBaseType_t",
        "control_flags": "true, true"
    },
    {
        "name": "ulTaskGenericNotifyValueClear",
        "arg_nums": 3,
        "arguments": "xTask, uxIndexToClear, ulBitsToClear",
        "type": "TaskHandle_t, UBaseType_t, uint32_t",
        "control_flags": "true, true, true"
    },
    {
        "name": "vTaskSetTimeOutState",
        "arg_nums": 1,
        "arguments": "pxTimeOut",
        "type": "TimeOut_t *",
        "control_flags": "restricted"
    },
    {
        "name": "xTaskCheckForTimeOut",
        "arg_nums": 2,
        "arguments": "pxTimeOut, pxTicksToWait",
        "type": "TimeOut_t *, TickType_t *",
        "control_flags": "restricted, restricted"
    },
    {
        "name": "MPU_xQueueGenericSend",
        "arg_nums": 4,
        "arguments": "xQueue, pvItemToQueue, xTicksToWait, xCopyPosition",
        "type": "QueueHandle_t, const void * const, TickType_t, const BaseType_t",
        "control_flags": "false, restricted, true, true"
    },
    {
        "name": "MPU_xQueueReceive",
        "arg_nums": 3,
        "arguments": "xQueue, pvBuffer, xTicksToWait",
        "type": "QueueHandle_t, void * const, TickType_t",
        "control_flags": "false, restricted, true"
    },
    {
        "name": "MPU_xQueuePeek",
        "arg_nums": 3,
        "arguments": "xQueue, pvBuffer, xTicksToWait",
        "type": "QueueHandle_t, void * const, TickType_t",
        "control_flags": "false, restricted, true"
    },
    {
        "name": "MPU_xQueueSemaphoreTake",
        "arg_nums": 2,
        "arguments": "xQueue, xTicksToWait",
        "type": "QueueHandle_t, TickType_t",
        "control_flags": "false, true"
    },
    {
        "name": "MPU_uxQueueMessagesWaiting",
        "arg_nums": 1,
        "arguments": "xQueue",
        "type": "const QueueHandle_t",
        "control_flags": "false"
    },
    {
        "name": "MPU_uxQueueSpacesAvailable",
        "arg_nums": 1,
        "arguments": "xQueue",
        "type": "const QueueHandle_t",
        "control_flags": "false"
    },
    {
        "name": "MPU_xQueueGetMutexHolder",
        "arg_nums": 1,
        "arguments": "xSemaphore",
        "type": "QueueHandle_t",
        "control_flags": "false"
    },
    {
        "name": "MPU_xQueueTakeMutexRecursive",
        "arg_nums": 2,
        "arguments": "xMutex, xTicksToWait",
        "type": "QueueHandle_t, TickType_t",
        "control_flags": "false, true"
    },
    {
        "name": "MPU_xQueueGiveMutexRecursive",
        "arg_nums": 1,
        "arguments": "pxMutex",
        "type": "QueueHandle_t",
        "control_flags": "false"
    },
    {
        "name": "MPU_vQueueAddToRegistry",
        "arg_nums": 2,
        "arguments": "xQueue, pcName",
        "type": "QueueHandle_t, const char *",
        "control_flags": "false, true"
    },
    {
        "name": "MPU_vQueueUnregisterQueue",
        "arg_nums": 1,
        "arguments": "xQueue",
        "type": "QueueHandle_t",
        "control_flags": "false"
    },
    {
        "name": "MPU_xQueueAddToSet",
        "arg_nums": 2,
        "arguments": "xQueueOrSemaphore, xQueueSet",
        "type": "QueueSetMemberHandle_t, QueueSetHandle_t",
        "control_flags": "false, false"
    },
    {
        "name": "MPU_xQueueSelectFromSet",
        "arg_nums": 2,
        "arguments": "xQueueSet, xTicksToWait",
        "type": "QueueSetHandle_t, const TickType_t",
        "control_flags": "false, true"
    },
    {
        "name": "MPU_vQueueSetQueueNumber",
        "arg_nums": 2,
        "arguments": "xQueue, uxQueueNumber",
        "type": "QueueHandle_t, UBaseType_t",
        "control_flags": "false, true"
    },
    {
        "name": "MPU_uxQueueGetQueueNumber",
        "arg_nums": 1,
        "arguments": "xQueue",
        "type": "QueueHandle_t",
        "control_flags": "false"
    },
    {
        "name": "MPU_ucQueueGetQueueType",
        "arg_nums": 1,
        "arguments": "xQueue",
        "type": "QueueHandle_t",
        "control_flags": "false"
    },


    
    {
        "name": "MPU_vTimerSetTimerID",
        "arg_nums": 2,
        "arguments": "xTimer, pvNewID",
        "type": "TimerHandle_t, void *",
        "control_flags": "true, true"
    },
    {
        "name": "MPU_xTimerIsTimerActive",
        "arg_nums": 1,
        "arguments": "xTimer",
        "type": "TimerHandle_t",
        "control_flags": "true"
    },
    {
        "name": "MPU_xTimerGetTimerDaemonTaskHandle",
        "arg_nums": 1,
        "arguments": "void",
        "type": "",
        "control_flags": "true"
    },
    {
        "name": "MPU_xTimerGenericCommand",
        "arg_nums": 5,
        "arguments": "xTimer, xCommandID, xOptionalValue, pxHigherPriorityTaskWoken, xTicksToWait",
        "type": "TimerHandle_t, const BaseType_t, const TickType_t, BaseType_t * const, const TickType_t",
        "control_flags": "true, true, true, true, true"
    },
    {
        "name": "MPU_vTimerSetReloadMode",
        "arg_nums": 2,
        "arguments": "xTimer, uxAutoReload",
        "type": "TimerHandle_t, const UBaseType_t",
        "control_flags": "true, true"
    },
    {
        "name": "MPU_xTimerGetReloadMode",
        "arg_nums": 1,
        "arguments": "xTimer",
        "type": "TimerHandle_t",
        "control_flags": "true"
    },
    {
        "name": "MPU_uxTimerGetReloadMode",
        "arg_nums": 1,
        "arguments": "xTimer",
        "type": "TimerHandle_t",
        "control_flags": "true"
    },
    {
        "name": "MPU_xTimerGetPeriod",
        "arg_nums": 1,
        "arguments": "xTimer",
        "type": "TimerHandle_t",
        "control_flags": "true"
    },
    {
        "name": "MPU_xTimerGetExpiryTime",
        "arg_nums": 1,
        "arguments": "xTimer",
        "type": "TimerHandle_t",
        "control_flags": "true"
    },
    {
        "name": "MPU_xTimerCreate",
        "arg_nums": 5,
        "arguments": "pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunction",
        "type": "const char * const, const TickType_t, const UBaseType_t, void * const, TimerCallbackFunction_t",
        "control_flags": "true, true, true, true, true"
    },
    {
        "name": "MPU_xTimerCreateStatic",
        "arg_nums": 6,
        "arguments": "pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunction, pxTimerBuffer",
        "type": "const char * const, const TickType_t, const UBaseType_t, void * const, TimerCallbackFunction_t, StaticTimer_t *",
        "control_flags": "true, true, true, true, true, true"
    },
    {
        "name": "MPU_xTimerGetStaticBuffer",
        "arg_nums": 2,
        "arguments": "xTimer, ppxTimerBuffer",
        "type": "TimerHandle_t, StaticTimer_t **",
        "control_flags": "true, true"
    },
    {
        "name": "MPU_xEventGroupWaitBits",
        "arg_nums": 5,
        "arguments": "xEventGroup, uxBitsToWaitFor, xClearOnExit, xWaitForAllBits, xTicksToWait",
        "type": "EventGroupHandle_t, const EventBits_t, const BaseType_t, const BaseType_t, TickType_t",
        "control_flags": "true, true, true, true, true"
    },
    {
        "name": "MPU_xEventGroupClearBits",
        "arg_nums": 2,
        "arguments": "xEventGroup, uxBitsToClear",
        "type": "EventGroupHandle_t, const EventBits_t",
        "control_flags": "true, true"
    },
    {
        "name": "MPU_xEventGroupSetBits",
        "arg_nums": 2,
        "arguments": "xEventGroup, uxBitsToSet",
        "type": "EventGroupHandle_t, const EventBits_t",
        "control_flags": "true, true"
    },
    {
        "name": "MPU_xEventGroupSync",
        "arg_nums": 4,
        "arguments": "xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTicksToWait",
        "type": "EventGroupHandle_t, const EventBits_t, const EventBits_t, TickType_t",
        "control_flags": "true, true, true, true"
    },
    {
        "name": "MPU_uxEventGroupGetNumber",
        "arg_nums": 1,
        "arguments": "xEventGroup",
        "type": "void *",
        "control_flags": "true"
    },
    {
        "name": "MPU_vEventGroupSetNumber",
        "arg_nums": 2,
        "arguments": "xEventGroup, uxEventGroupNumber",
        "type": "void *, UBaseType_t",
        "control_flags": "true, true"
    },
    {
        "name": "MPU_xStreamBufferSend",
        "arg_nums": 4,
        "arguments": "xStreamBuffer, pvTxData, xDataLengthBytes, xTicksToWait",
        "type": "StreamBufferHandle_t, const void *, size_t, TickType_t",
        "control_flags": "true, true, true, true"
    },
    {
        "name": "MPU_xStreamBufferReceive",
        "arg_nums": 4,
        "arguments": "xStreamBuffer, pvRxData, xBufferLengthBytes, xTicksToWait",
        "type": "StreamBufferHandle_t, void *, size_t, TickType_t",
        "control_flags": "true, true, true, true"
    },
    {
        "name": "MPU_xStreamBufferIsFull",
        "arg_nums": 1,
        "arguments": "xStreamBuffer",
        "type": "StreamBufferHandle_t",
        "control_flags": "true"
    },
    {
        "name": "MPU_xStreamBufferIsEmpty",
        "arg_nums": 1,
        "arguments": "xStreamBuffer",
        "type": "StreamBufferHandle_t",
        "control_flags": "true"
    },
    {
        "name": "MPU_xStreamBufferSpacesAvailable",
        "arg_nums": 1,
        "arguments": "xStreamBuffer",
        "type": "StreamBufferHandle_t",
        "control_flags": "true"
    },
    {
        "name": "MPU_xStreamBufferBytesAvailable",
        "arg_nums": 1,
        "arguments": "xStreamBuffer",
        "type": "StreamBufferHandle_t",
        "control_flags": "true"
    },
    {
        "name": "MPU_xStreamBufferSetTriggerLevel",
        "arg_nums": 2,
        "arguments": "xStreamBuffer, xTriggerLevel",
        "type": "StreamBufferHandle_t, size_t",
        "control_flags": "true, true"
    },
    {
        "name": "MPU_xStreamBufferNextMessageLengthBytes",
        "arg_nums": 1,
        "arguments": "xStreamBuffer",
        "type": "StreamBufferHandle_t",
        "control_flags": "true"
    }
]